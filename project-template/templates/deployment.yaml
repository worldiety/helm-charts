apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ include "project-template.namespace" . }}
  name: {{ include "project-template.fullname" . }}
  labels:
    {{- include "project-template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "project-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "project-template.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "project-template.namespace" . }}-user
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsGroup: 1000
        runAsUser: 1000
      {{ if .Values.gitlabImage }}
      imagePullSecrets:
        - name: {{ include "project-template.image-pull-secret-name" . }}
      {{ end }}
      containers:
        - name: {{ .Values.name }}
          {{- if .Values.gitlabImage -}}
          {{ $repo := .Values.gitlabImage.repository }}
          {{ $tag := .Values.gitlabImage.tag }}
          {{ $user := .Values.gitlabImage.user }}
          {{ $passwd := .Values.gitlabImage.password }}
          {{ if and (ne $repo "") (ne $tag "") }}
          image: {{ .Values.gitlabImage.repository }}:{{ .Values.gitlabImage.tag }}
          {{ else }}
          image: {{ .Values.dockerhubImage }}
          {{ end }}
          {{ else }}
          image: {{ .Values.dockerhubImage }}
          {{ end }}
          {{- if .Values.probe -}}
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: {{ .Values.containerPort }}
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: {{ .Values.containerPort }}
            failureThreshold: 30
            periodSeconds: 10
          {{ end }}
          # We do not need to specify a pullPolicy, because we want to use the default behaviour:
          # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
          # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
          #
          # We want to always pull the image, because we might use dev/stage/prod as image tags, not only 'latest'
          imagePullPolicy: Always
          volumeMounts:
            {{- if .Values.persistentVolumes -}}
            {{ range .Values.persistentVolumes }}
            - mountPath: {{ .path }}
              name: {{ .name }}-folder
            {{ end }}
            {{ end }}

            {{- if .Values.temporaryVolumes -}}
            {{ range .Values.temporaryVolumes }}
            - mountPath: {{ .path }}
              name: {{ .name }}-folder
            {{ end }}
            {{ end }}

          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          resources:
            {{- if .Values.resources -}}
            {{- toYaml .Values.resources | nindent 12 }}
            {{ end }}
          env:            
          {{- include "project-template.environment-variables-list" . | indent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
      volumes:
        {{- if .Values.persistentVolumes -}}
        {{ range .Values.persistentVolumes }}
        - name: {{ .name }}-folder
          persistentVolumeClaim:
            claimName: {{ .name }}-folder
        {{ end }}
        {{ end }}

        {{- if .Values.temporaryVolumes -}}
        {{ range .Values.temporaryVolumes }}
        - name: {{ .name }}-folder
          emptyDir: {}
        {{ end }}
        {{ end }}